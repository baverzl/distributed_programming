level-trigger: 입력버퍼에 데이터가 남아있는 동안에 계속해서 이벤트가 등록됨.
ex) 서버의 입력버퍼로 50바이트의 데이터가 수신되면, 서버 측 운영체제는
이를 이벤트로 등록함. 그런데 서버에서 20바이트를 수신해서 입력버퍼에 30바이트만
남는다면, 이 상황 역시 이벤트로 등록이 된다.
레벨 트리거 방식에서는 입력버퍼에 데이터가 남아있기만 해도
이 상화을 이벤트로 등록한다.

edge-trigger: 입력버퍼로 데이터가 수신된 상황에서 딱! 한번만 이벤트가 등록됨.
입력버퍼에 데이터가 남아있다고 해서 이벤트를 추가로 등록하지 않는다.

epoll은 기본적으로 level-trigger 방식

버퍼 크기를 줄임 => 입력버퍼에 수신된 데이터를 한번에 읽어 들이지 못하게 하기 위함
 -> read 함수 호출 이후에도 입력버퍼에는 여전히 읽어 들일 데이터가 존재함
=> 새로운 이벤트가 등록 되어서 epoll_wait 함수가 반환함 => "return epoll_wait" 반복 출력됨.

edge-trigger로 변환

event.events = EPOLLIN | EPOLLET;

select 모델 => level-trigger
입력버퍼에 데이터가 남아있따면 무조건 이벤트가 등록됨.

read 함수가 -1을 반환하고, errno 값이 EAGAIN이라면 더 이상 읽어들일 데이터가 존재하지 않음.

edge-trigger의 특성상 blocking 방식으로 동작하는 read & write 함수의 호출은 서버를
오랜 시간 멈추는 상황으로까지 이어지게 할 수 있다.
따라서, edge-trigger 방식에서는 반드시 non-blocking socket 기반으로 read & write 함수를
호출해야함.

